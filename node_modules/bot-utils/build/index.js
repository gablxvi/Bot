"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function randInt(min, max) {
    return Math.floor(Math.random() * (max - min - 1)) + min;
}
exports.randInt = randInt;
function randColor() {
    return "#000000".replace(/0/g, function () {
        return (~~(Math.random() * 16)).toString(16);
    });
}
exports.randColor = randColor;
function cpuUsage() {
    var msec = Number(process.uptime().toFixed(0)) * 1000;
    var days = Math.floor(msec / 1000 / 60 / 60 / 24);
    msec -= days * 1000 * 60 * 60 * 24;
    var hours = Math.floor(msec / 1000 / 60 / 60);
    msec -= hours * 1000 * 60 * 60;
    var mins = Math.floor(msec / 1000 / 60);
    msec -= mins * 1000 * 60;
    var secs = Math.floor(msec / 1000);
    var timestr = "";
    if (days > 0)
        timestr += days + " days ";
    if (hours > 0)
        timestr += hours + " hours ";
    if (mins > 0)
        timestr += mins + " minutes ";
    if (secs > 0)
        timestr += secs + " seconds";
    return timestr;
}
exports.cpuUsage = cpuUsage;
function randAlphaNumeric(len) {
    var rdmString = "";
    for (; rdmString.length < len; rdmString += Math.random().toString(36).substr(2))
        ;
    return rdmString.substr(0, len);
}
exports.randAlphaNumeric = randAlphaNumeric;
function round(number, decimalPlace) {
    return Number(number.toFixed(decimalPlace));
}
exports.round = round;
function snowflake(snowflake) {
    return new Date((snowflake * Math.pow(2, -22)) + 1420070400000).toUTCString();
}
exports.snowflake = snowflake;
function hasNumber(str) {
    return /\d/.test(str);
}
exports.hasNumber = hasNumber;
function isNumber(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
}
exports.isNumber = isNumber;
function uptime() {
    var msec = Number(process.uptime().toFixed(0)) * 1000;
    var days = Math.floor(msec / 1000 / 60 / 60 / 24);
    msec -= days * 1000 * 60 * 60 * 24;
    var hours = Math.floor(msec / 1000 / 60 / 60);
    msec -= hours * 1000 * 60 * 60;
    var mins = Math.floor(msec / 1000 / 60);
    msec -= mins * 1000 * 60;
    var secs = Math.floor(msec / 1000);
    var timestr = "";
    if (days > 0)
        timestr += days + "d ";
    else if (hours > 0)
        timestr += hours + "h ";
    else if (mins > 0)
        timestr += mins + "m ";
    else if (secs > 0)
        timestr += secs + "s";
    return timestr;
}
exports.uptime = uptime;
Array.prototype.shuffle = function () {
    var old = this.slice();
    var output = [];
    while (old.length) {
        var random = old.splice(Math.floor(Math.random() * old.length), 1)[0];
        output.push(random);
    }
    return output;
};
Array.prototype.random = function () {
    var out = this.slice();
    return out[~~(out.length * Math.random())];
};
Object.prototype.isArray = function () {
    return Array.isArray(this) ? true : false;
};
var randColour = function () { return randColor(); };
exports.randColour = randColour;
